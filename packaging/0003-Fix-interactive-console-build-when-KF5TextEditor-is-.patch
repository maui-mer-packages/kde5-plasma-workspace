From: Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
Date: Sat, 11 Oct 2014 17:18:25 +0000
Subject: Fix interactive console build when KF5TextEditor is not found

InteractiveConsole is built only when KF5TextEditor is found but the
plugin always provide InteractiveConsoleItem resulting in build
failures.

Move InteractiveConsoleItem code to separate cpp/h pair of files and
always build it with ifdef'ed code.
---
 components/shellprivate/CMakeLists.txt             |   5 +
 components/shellprivate/config-ktexteditor.h.cmake |   1 +
 .../interactiveconsole/interactiveconsole.h        |  46 ---------
 .../interactiveconsole/interactiveconsoleitem.cpp  | 108 +++++++++++++++++++++
 .../interactiveconsole/interactiveconsoleitem.h    |  61 ++++++++++++
 components/shellprivate/shellprivateplugin.cpp     |   2 +-
 6 files changed, 176 insertions(+), 47 deletions(-)
 create mode 100644 components/shellprivate/config-ktexteditor.h.cmake
 create mode 100644 components/shellprivate/interactiveconsole/interactiveconsoleitem.cpp
 create mode 100644 components/shellprivate/interactiveconsole/interactiveconsoleitem.h

diff --git a/components/shellprivate/CMakeLists.txt b/components/shellprivate/CMakeLists.txt
index d5824c2..da218d0 100644
--- a/components/shellprivate/CMakeLists.txt
+++ b/components/shellprivate/CMakeLists.txt
@@ -6,8 +6,12 @@ if (KF5TextEditor_FOUND)
    set(interactiveconsole_SRCS
        interactiveconsole/interactiveconsole.cpp
        )
+    set(HAVE_TEXTEDITOR 1)
+else()
+    set(HAVE_TEXTEDITOR 0)
 endif (KF5TextEditor_FOUND)
 
+configure_file(config-ktexteditor.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config-ktexteditor.h)
 
 set(plasmashellprivateplugin_SRCS
     widgetexplorer/kcategorizeditemsviewmodels.cpp
@@ -15,6 +19,7 @@ set(plasmashellprivateplugin_SRCS
     widgetexplorer/openwidgetassistant.cpp
     widgetexplorer/widgetexplorer.cpp
     shellprivateplugin.cpp
+    interactiveconsole/interactiveconsoleitem.cpp
     ${interactiveconsole_SRCS}
 )
 
diff --git a/components/shellprivate/config-ktexteditor.h.cmake b/components/shellprivate/config-ktexteditor.h.cmake
new file mode 100644
index 0000000..91db794
--- /dev/null
+++ b/components/shellprivate/config-ktexteditor.h.cmake
@@ -0,0 +1 @@
+#cmakedefine01 HAVE_KTEXTEDITOR
diff --git a/components/shellprivate/interactiveconsole/interactiveconsole.h b/components/shellprivate/interactiveconsole/interactiveconsole.h
index 72fb2d0..e7abf11 100644
--- a/components/shellprivate/interactiveconsole/interactiveconsole.h
+++ b/components/shellprivate/interactiveconsole/interactiveconsole.h
@@ -123,51 +123,5 @@ private:
     QPointer<QObject> m_scriptEngine;
 };
 
-class InteractiveConsoleItem : public QObject
-{
-    Q_OBJECT
-    Q_PROPERTY(QObject *scriptEngine READ scriptEngine WRITE setScriptInterface NOTIFY scriptEngineChanged)
-    Q_PROPERTY(QString mode READ mode WRITE setMode NOTIFY modeChanged)
-    Q_PROPERTY(bool visible READ isVisible WRITE setVisible NOTIFY visibleChanged)
-
-public:
-    InteractiveConsoleItem()
-        : QObject(0),
-          m_dialog(new InteractiveConsole(0))
-    {
-        connect(m_dialog, &InteractiveConsole::scriptEngineChanged,
-                this, &InteractiveConsoleItem::scriptEngineChanged);
-        connect(m_dialog, &InteractiveConsole::modeChanged,
-                this, &InteractiveConsoleItem::modeChanged);
-        connect(m_dialog, &InteractiveConsole::visibleChanged,
-                this, &InteractiveConsoleItem::visibleChanged);
-    }
-
-    ~InteractiveConsoleItem()
-    {
-        m_dialog->deleteLater();
-    }
-
-    void setMode(const QString &mode) { m_dialog->setMode(mode); }
-    QString mode() const { return m_dialog->mode(); }
-
-    void setScriptInterface(QObject *obj) { m_dialog->setScriptInterface(obj); }
-    QObject *scriptEngine() const { return m_dialog->scriptEngine(); }
-
-    void setVisible(bool visible) const { visible ? m_dialog->show() : m_dialog->hide(); }
-    bool isVisible() const { return m_dialog->isVisible(); }
-
-public Q_SLOTS:
-    void loadScript(const QString &path) { m_dialog->loadScript(path); }
-
-Q_SIGNALS:
-    void scriptEngineChanged();
-    void modeChanged();
-    void visibleChanged(bool);
-
-private:
-    InteractiveConsole *m_dialog;
-};
-
 #endif
 
diff --git a/components/shellprivate/interactiveconsole/interactiveconsoleitem.cpp b/components/shellprivate/interactiveconsole/interactiveconsoleitem.cpp
new file mode 100644
index 0000000..5284177
--- /dev/null
+++ b/components/shellprivate/interactiveconsole/interactiveconsoleitem.cpp
@@ -0,0 +1,108 @@
+/*
+ *   Copyright 2009 Aaron Seigo <aseigo@kde.org>
+ *   Copyright 2014 Marco Martin <mart@kde.org>
+ *   Copyright 2014 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
+ *
+ *   This program is free software; you can redistribute it and/or modify
+ *   it under the terms of the GNU Library General Public License as
+ *   published by the Free Software Foundation; either version 2, or
+ *   (at your option) any later version.
+ *
+ *   This program is distributed in the hope that it will be useful,
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *   GNU General Public License for more details
+ *
+ *   You should have received a copy of the GNU Library General Public
+ *   License along with this program; if not, write to the
+ *   Free Software Foundation, Inc.,
+ *   51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include "shell/config-ktexteditor.h"
+
+#include "interactiveconsoleitem.h"
+
+InteractiveConsoleItem::InteractiveConsoleItem()
+    : QObject(0)
+#if HAVE_KTEXTEDITOR
+    , m_dialog(new InteractiveConsole(0))
+#else
+    , m_dialog(0);
+#endif
+{
+#if HAVE_KTEXTEDITOR
+    connect(m_dialog, &InteractiveConsole::scriptEngineChanged,
+            this, &InteractiveConsoleItem::scriptEngineChanged);
+    connect(m_dialog, &InteractiveConsole::modeChanged,
+            this, &InteractiveConsoleItem::modeChanged);
+    connect(m_dialog, &InteractiveConsole::visibleChanged,
+            this, &InteractiveConsoleItem::visibleChanged);
+#endif
+}
+
+InteractiveConsoleItem::~InteractiveConsoleItem()
+{
+#if HAVE_KTEXTEDITOR
+    m_dialog->deleteLater();
+#endif
+}
+
+void InteractiveConsoleItem::setMode(const QString &mode)
+{
+#if HAVE_KTEXTEDITOR
+    m_dialog->setMode(mode);
+#endif
+}
+
+QString InteractiveConsoleItem::mode() const
+{
+#if HAVE_KTEXTEDITOR
+    return m_dialog->mode();
+#else
+    return QString();
+#endif
+}
+
+void InteractiveConsoleItem::setScriptInterface(QObject *obj)
+{
+#if HAVE_KTEXTEDITOR
+    m_dialog->setScriptInterface(obj);
+#else
+    Q_UNUSED(obj);
+#endif
+}
+
+QObject *InteractiveConsoleItem::scriptEngine() const
+{
+#if HAVE_KTEXTEDITOR
+    return m_dialog->scriptEngine();
+#else
+    return 0;
+#endif
+}
+
+void InteractiveConsoleItem::setVisible(bool visible) const
+{
+#if HAVE_KTEXTEDITOR
+    visible ? m_dialog->show() : m_dialog->hide();
+#endif
+}
+
+bool InteractiveConsoleItem::isVisible() const
+{
+#if HAVE_KTEXTEDITOR
+    return m_dialog->isVisible();
+#else
+    return false;
+#endif
+}
+
+void InteractiveConsoleItem::loadScript(const QString &path)
+{
+#if HAVE_KTEXTEDITOR
+    m_dialog->loadScript(path);
+#endif
+}
+
+#include "interactiveconsoleitem.moc"
diff --git a/components/shellprivate/interactiveconsole/interactiveconsoleitem.h b/components/shellprivate/interactiveconsole/interactiveconsoleitem.h
new file mode 100644
index 0000000..1fa4229
--- /dev/null
+++ b/components/shellprivate/interactiveconsole/interactiveconsoleitem.h
@@ -0,0 +1,61 @@
+/*
+ *   Copyright 2009 Aaron Seigo <aseigo@kde.org>
+ *   Copyright 2014 Marco Martin <mart@kde.org>
+ *   Copyright 2014 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
+ *
+ *   This program is free software; you can redistribute it and/or modify
+ *   it under the terms of the GNU Library General Public License as
+ *   published by the Free Software Foundation; either version 2, or
+ *   (at your option) any later version.
+ *
+ *   This program is distributed in the hope that it will be useful,
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *   GNU General Public License for more details
+ *
+ *   You should have received a copy of the GNU Library General Public
+ *   License along with this program; if not, write to the
+ *   Free Software Foundation, Inc.,
+ *   51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#ifndef INTERACTIVECONSOLEITEM_H
+#define INTERACTIVECONSOLEITEM_H
+
+#include <QObject>
+
+#include "interactiveconsole.h"
+
+class InteractiveConsoleItem : public QObject
+{
+    Q_OBJECT
+    Q_PROPERTY(QObject *scriptEngine READ scriptEngine WRITE setScriptInterface NOTIFY scriptEngineChanged)
+    Q_PROPERTY(QString mode READ mode WRITE setMode NOTIFY modeChanged)
+    Q_PROPERTY(bool visible READ isVisible WRITE setVisible NOTIFY visibleChanged)
+
+public:
+    InteractiveConsoleItem();
+    ~InteractiveConsoleItem();
+
+    void setMode(const QString &mode);
+    QString mode() const;
+
+    void setScriptInterface(QObject *obj);
+    QObject *scriptEngine() const;
+
+    void setVisible(bool visible) const;
+    bool isVisible() const;
+
+public Q_SLOTS:
+    void loadScript(const QString &path);
+
+Q_SIGNALS:
+    void scriptEngineChanged();
+    void modeChanged();
+    void visibleChanged(bool);
+
+private:
+    InteractiveConsole *m_dialog;
+};
+
+#endif // INTERACTIVECONSOLEITEM_H
diff --git a/components/shellprivate/shellprivateplugin.cpp b/components/shellprivate/shellprivateplugin.cpp
index 84c2150..8a4b9a6 100644
--- a/components/shellprivate/shellprivateplugin.cpp
+++ b/components/shellprivate/shellprivateplugin.cpp
@@ -25,7 +25,7 @@
 #include <QtQml>
 
 #include "widgetexplorer/widgetexplorer.h"
-#include "interactiveconsole/interactiveconsole.h"
+#include "interactiveconsole/interactiveconsoleitem.h"
 #include <plasma/containment.h>
 
 void PlasmaShellPrivatePlugin::registerTypes(const char *uri)
