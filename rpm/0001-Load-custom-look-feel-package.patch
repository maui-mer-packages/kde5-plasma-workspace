From 650b5469be75309b43f913cfa02814f1d0538383 Mon Sep 17 00:00:00 2001
From: Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
Date: Wed, 2 Jul 2014 20:33:31 +0200
Subject: [PATCH 1/5] Load custom look & feel package

Just like with shell handlers, we want downstream to load their
custom look & feel packages.

BUG:336844
---
 shell/main.cpp         | 6 ++++++
 shell/shellcorona.cpp  | 8 ++++++--
 shell/shellmanager.cpp | 1 +
 shell/shellmanager.h   | 1 +
 4 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/shell/main.cpp b/shell/main.cpp
index 0b96674..f5032a7 100644
--- a/shell/main.cpp
+++ b/shell/main.cpp
@@ -76,6 +76,10 @@ int main(int argc, char** argv)
                                      i18n("Force loading the given shell plugin"),
                                      QStringLiteral("plugin"));
 
+    QCommandLineOption lookAndFeelPlugin(QStringList() << QStringLiteral("l") << QStringLiteral("lookandfeel-plugin"),
+                                         i18n("Force loading the given look & feel plugin"),
+                                         QStringLiteral("plugin"));
+
     parser.addVersionOption();
     parser.addHelpOption();
     parser.addOption(dbg);
@@ -84,6 +88,7 @@ int main(int argc, char** argv)
     parser.addOption(crash);
     parser.addOption(shutup);
     parser.addOption(shellPlugin);
+    parser.addOption(lookAndFeelPlugin);
 
     parser.process(app);
 
@@ -96,6 +101,7 @@ int main(int argc, char** argv)
     ShellManager::s_forceWindowed = parser.isSet(win);
     ShellManager::s_noRespawn = parser.isSet(respawn);
     ShellManager::s_fixedShell = parser.value(shellPlugin);
+    ShellManager::s_fixedLookAndFeel = parser.value(lookAndFeelPlugin);
     QObject::connect(QCoreApplication::instance(), SIGNAL(aboutToQuit()), ShellManager::instance(), SLOT(deleteLater()));
 
     return app.exec();
diff --git a/shell/shellcorona.cpp b/shell/shellcorona.cpp
index 6ad0571..1bec09e 100644
--- a/shell/shellcorona.cpp
+++ b/shell/shellcorona.cpp
@@ -1251,9 +1251,13 @@ void ShellCorona::desktopContainmentDestroyed(QObject *obj)
 Plasma::Package ShellCorona::lookAndFeelPackage() const
 {
     if (!d->lookNFeelPackage.isValid()) {
-        d->lookNFeelPackage = ShellPluginLoader::self()->loadPackage("Plasma/LookAndFeel");
         //TODO: make loading from config once we have some UI for setting the package
-        d->lookNFeelPackage.setPath("org.kde.lookandfeel");
+        QString lookAndFeel("org.kde.lookandfeel");
+        if (!ShellManager::s_fixedLookAndFeel.isEmpty())
+            lookAndFeel = ShellManager::s_fixedLookAndFeel;
+
+        d->lookNFeelPackage = ShellPluginLoader::self()->loadPackage("Plasma/LookAndFeel");
+        d->lookNFeelPackage.setPath(lookAndFeel);
     }
 
     return d->lookNFeelPackage;
diff --git a/shell/shellmanager.cpp b/shell/shellmanager.cpp
index d6caa1f..4c87209 100644
--- a/shell/shellmanager.cpp
+++ b/shell/shellmanager.cpp
@@ -47,6 +47,7 @@ bool ShellManager::s_noRespawn = false;
 
 int ShellManager::crashes = 0;
 QString ShellManager::s_fixedShell;
+QString ShellManager::s_fixedLookAndFeel;
 
 //
 // ShellManager
diff --git a/shell/shellmanager.h b/shell/shellmanager.h
index 012ae14..a247d2d 100644
--- a/shell/shellmanager.h
+++ b/shell/shellmanager.h
@@ -41,6 +41,7 @@ public:
     static bool s_forceWindowed;
     static bool s_noRespawn;
     static QString s_fixedShell;
+    static QString s_fixedLookAndFeel;
 
     static void setCrashCount(int count);
 
-- 
1.9.1

